//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.api.service;

import java.util.Collection;
import java.util.List;

import net.disy.eenvplus.tfes.core.api.capabilities.ServiceModuleDescription;
import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.query.IConceptQuery;
import net.disy.eenvplus.tfes.core.api.query.IDescribeConceptQuery;
import net.disy.eenvplus.tfes.core.api.query.IRelativeQuery;
import net.disy.eenvplus.tfes.core.api.query.IResolveThesaurusQuery;
import net.disy.eenvplus.tfes.core.api.query.ISuggestionQuery;
import net.disy.eenvplus.tfes.core.api.query.ISynonymQuery;
import net.disy.eenvplus.tfes.core.api.query.ITopMostConceptQuery;
import net.disy.eenvplus.tfes.core.api.response.IConceptDescription;
import net.disy.eenvplus.tfes.core.api.response.IRelative;
import net.disy.eenvplus.tfes.core.api.response.IResolveThesaurus;
import net.disy.eenvplus.tfes.core.api.response.ISuggestion;
import net.disy.eenvplus.tfes.core.api.response.ISynonym;
import net.disy.eenvplus.tfes.core.api.response.ITopMostConcept;
import net.disy.eenvplus.tfes.core.api.response.IVisualizationNode;

// NOT_PUBLISHED
public interface IServiceManager {

  List<ServiceModuleDescription> getSuggestionsDescriptions();

  List<ServiceModuleDescription> getDescribeContextDescriptions();

  List<ServiceModuleDescription> getRelativesDescriptions();

  List<ServiceModuleDescription> getSynonymsDescriptions();

  List<ServiceModuleDescription> getResolveThesaurusDescriptions();

  List<ServiceModuleDescription> getTopMostConceptDescriptions();

  List<ServiceModuleDescription> getRelativeNeighbourhoodDescriptions();

  Collection<ISuggestion> getSuggestions(ISuggestionQuery query) throws ServiceException;

  IConceptDescription describeConcept(IDescribeConceptQuery capture) throws ServiceException;

  Collection<IRelative> getRelatives(IRelativeQuery capture) throws ServiceException;

  Collection<ISynonym> getSynonyms(ISynonymQuery capture) throws ServiceException;

  IResolveThesaurus getResolveThesaurus(IResolveThesaurusQuery query) throws ServiceException;

  Collection<ITopMostConcept> getTopMostConcepts(ITopMostConceptQuery query)
      throws ServiceException;

  IVisualizationNode getRelativeNeighbourhood(IConceptQuery query) throws ServiceException;

}
