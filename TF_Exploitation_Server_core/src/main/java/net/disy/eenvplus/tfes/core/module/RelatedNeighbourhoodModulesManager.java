//Copyright (c) 2015 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.module;

import static net.disy.eenvplus.tfes.core.util.CollectionUtilities.first;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;

import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.modules.IRelativeNeighbourhoodProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.IConceptQuery;
import net.disy.eenvplus.tfes.core.api.response.IVisualizationNode;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

// NOT_PUBLISHED
@Service
public class RelatedNeighbourhoodModulesManager
    extends
    AbstractModuleManager<IRelativeNeighbourhoodProviderServiceModule, IConceptQuery, IVisualizationNode> {

  @Autowired(required = false)
  List<IRelativeNeighbourhoodProviderServiceModule> modules = new ArrayList<>();

  @Override
  protected List<IRelativeNeighbourhoodProviderServiceModule> getServiceModules() {
    return modules;
  }

  @Override
  protected Callable<IVisualizationNode> createCallable(
      IConceptQuery query,
      IRelativeNeighbourhoodProviderServiceModule module) {
    return module.getNeighbourhood(query);
  }

  public IVisualizationNode getRelativeNeighbourhood(IConceptQuery query) throws ServiceException {
    Set<Future<IVisualizationNode>> futures = submitQuery(query);
    Collection<IVisualizationNode> results = retrieveResults(futures);
    return first(results, null);
  }

}
