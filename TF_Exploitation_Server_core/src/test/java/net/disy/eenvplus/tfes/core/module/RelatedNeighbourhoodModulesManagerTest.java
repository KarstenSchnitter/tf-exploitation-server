package net.disy.eenvplus.tfes.core.module;

import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.concurrent.Callable;

import net.disy.eenvplus.tfes.core.api.modules.IRelativeNeighbourhoodProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.IConceptQuery;
import net.disy.eenvplus.tfes.core.api.response.IVisualizationNode;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class RelatedNeighbourhoodModulesManagerTest {

  @Mock
  private IConceptQuery query;

  @Mock
  private IRelativeNeighbourhoodProviderServiceModule module;

  @InjectMocks
  private RelatedNeighbourhoodModulesManager manager;

  @Before
  public void setUp() {
    manager.modules.add(module);
  }

  private Callable<IVisualizationNode> createModuleResult(final IVisualizationNode result) {
    return new Callable<IVisualizationNode>() {
      @Override
      public IVisualizationNode call() throws Exception {
        return result;
      }
    };
  }

  @Test
  public void delegatesQueryToModule() throws Exception {
    when(module.getNeighbourhood(query)).thenReturn(createModuleResult(null));

    manager.getRelativeNeighbourhood(query);

    verify(module).getNeighbourhood(query);
  }
}
