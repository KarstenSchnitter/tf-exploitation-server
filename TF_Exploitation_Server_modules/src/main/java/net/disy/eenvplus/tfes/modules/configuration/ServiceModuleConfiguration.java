//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.configuration;

import net.disy.eenvplus.tfes.core.api.modules.IDescriptionProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.IRelativeNeighbourhoodProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.IRelativeProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.IResolveThesaurusProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.ISuggestionProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.ISynonymProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.modules.ITopMostConceptProviderServiceModule;
import net.disy.eenvplus.tfes.modules.keyword.completion.KeywordCompletionModule;
import net.disy.eenvplus.tfes.modules.keyword.completion.crosswalking.KeywordCompletionCrossWalkingModule;
import net.disy.eenvplus.tfes.modules.keyword.explanation.KeywordExplanationModule;
import net.disy.eenvplus.tfes.modules.keyword.translation.KeywordTranslationModule;
import net.disy.eenvplus.tfes.modules.keyword.translation.crosswalking.KeywordTranslationCrossWalkingModule;
import net.disy.eenvplus.tfes.modules.semantic.explorative.search.SemanticExplorativeSearchModule;
import net.disy.eenvplus.tfes.modules.semantic.explorative.search.crosswalking.SemanticExplorativeSearchCrossWalkingModule;
import net.disy.eenvplus.tfes.modules.semantic.neighbourhood.RelativeNeighbourhoodModule;
import net.disy.eenvplus.tfes.modules.thesaurus.resolution.ThesaurusResolutionModule;
import net.disy.eenvplus.tfes.modules.topmost.TopMostConceptModule;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

// NOT_PUBLISHED
@Configuration
public class ServiceModuleConfiguration {

  @Bean
  @ConfiguredByEnvironmentProperty("use.keyword.completion.module")
  public ISuggestionProviderServiceModule labelStartScanningModule() {
    return new KeywordCompletionModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.keyword.completion.cross-walking.module")
  public ISuggestionProviderServiceModule labelStartScanningCrossWalkingModule() {
    return new KeywordCompletionCrossWalkingModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.keyword.explanation.module")
  public IDescriptionProviderServiceModule describeConceptModule() {
    return new KeywordExplanationModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.semantic.explorative.search.module")
  public IRelativeProviderServiceModule relativesModule() {
    return new SemanticExplorativeSearchModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.semantic.explorative.search.cross-walking.module")
  public IRelativeProviderServiceModule relativesCrossWalkingModule() {
    return new SemanticExplorativeSearchCrossWalkingModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.keyword.translation.module")
  public ISynonymProviderServiceModule synonymsModule() {
    return new KeywordTranslationModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.keyword.translation.cross-walking.module")
  public ISynonymProviderServiceModule synonymsCrossWalkingModule() {
    return new KeywordTranslationCrossWalkingModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.thesaurus.resolution.module")
  public IResolveThesaurusProviderServiceModule resolveThesaurusModule() {
    return new ThesaurusResolutionModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.topmost.concept.module")
  public ITopMostConceptProviderServiceModule topMostConceptModule() {
    return new TopMostConceptModule();
  }

  @Bean
  @ConfiguredByEnvironmentProperty("use.semantic.neighbourhood.module")
  public IRelativeNeighbourhoodProviderServiceModule relativeNeighbourhoodModule() {
    return new RelativeNeighbourhoodModule();
  }

}
