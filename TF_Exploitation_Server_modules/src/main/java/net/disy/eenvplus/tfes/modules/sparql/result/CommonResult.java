//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.sparql.result;

import static org.apache.commons.lang3.StringUtils.abbreviate;
import static org.apache.commons.lang3.StringUtils.rightPad;
import net.disy.eenvplus.tfes.core.api.response.IRelative;
import net.disy.eenvplus.tfes.core.api.response.ISuggestion;
import net.disy.eenvplus.tfes.core.api.response.ISynonym;

import org.apache.commons.lang3.StringUtils;

// NOT_PUBLISHED

class CommonResult implements ISuggestion, ISynonym, IRelative {

  final private String label;
  final private String language;
  final private String conceptUri;
  final private String sourceLabel;
  final private String relationLabel;
  final private String relationUri;

  static class Builder {
    private String label;
    private String language;
    private String conceptUri;
    private String sourceLabel;
    private String relationLabel;
    private String relationUri;

    public Builder() {
    }

    public Builder label(String label) {
      this.label = label;
      return this;
    }

    public Builder language(String language) {
      this.language = language;
      return this;
    }

    public Builder conceptUri(String conceptUri) {
      this.conceptUri = conceptUri;
      return this;
    }

    public Builder sourceLabel(String sourceLabel) {
      this.sourceLabel = sourceLabel;
      return this;
    }

    public Builder relationLabel(String relationLabel) {
      this.relationLabel = relationLabel;
      return this;
    }

    public Builder relationUri(String relationUri) {
      this.relationUri = relationUri;
      return this;
    }

    CommonResult build() {
      return new CommonResult(this);
    }
  }

  public CommonResult(Builder builder) {
    this.label = builder.label;
    this.language = builder.language;
    this.conceptUri = builder.conceptUri;
    this.sourceLabel = builder.sourceLabel;
    this.relationLabel = builder.relationLabel;
    this.relationUri = builder.relationUri;
  }

  @Override
  public String getLabel() {
    return label;
  }

  @Override
  public String getLanguage() {
    return language;
  }

  @Override
  public String getConceptUri() {
    return conceptUri;
  }

  @Override
  public String getSourceLabel() {
    return sourceLabel;
  }

  @Override
  public String getRelationLabel() {
    return relationLabel;
  }

  @Override
  public String getRelationUri() {
    return relationUri;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (StringUtils.isNotBlank(getRelationLabel())) {
      builder.append(rightPad(getRelationLabel(), 20));
    }
    builder.append(abbreviate(getLabel(), 20)).append('@').append(rightPad(getLanguage(), 6));
    builder.append('<').append(getConceptUri()).append('>');
    return builder.toString();
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((conceptUri == null) ? 0 : conceptUri.hashCode());
    result = prime * result + ((label == null) ? 0 : label.hashCode());
    result = prime * result + ((language == null) ? 0 : language.hashCode());
    result = prime * result + ((relationLabel == null) ? 0 : relationLabel.hashCode());
    result = prime * result + ((relationUri == null) ? 0 : relationUri.hashCode());
    result = prime * result + ((sourceLabel == null) ? 0 : sourceLabel.hashCode());
    return result;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    CommonResult other = (CommonResult) obj;
    if (conceptUri == null) {
      if (other.conceptUri != null)
        return false;
    }
    else if (!conceptUri.equals(other.conceptUri))
      return false;
    if (label == null) {
      if (other.label != null)
        return false;
    }
    else if (!label.equals(other.label))
      return false;
    if (language == null) {
      if (other.language != null)
        return false;
    }
    else if (!language.equals(other.language))
      return false;
    if (relationLabel == null) {
      if (other.relationLabel != null)
        return false;
    }
    else if (!relationLabel.equals(other.relationLabel))
      return false;
    if (relationUri == null) {
      if (other.relationUri != null)
        return false;
    }
    else if (!relationUri.equals(other.relationUri))
      return false;
    if (sourceLabel == null) {
      if (other.sourceLabel != null)
        return false;
    }
    else if (!sourceLabel.equals(other.sourceLabel))
      return false;
    return true;
  }

}
