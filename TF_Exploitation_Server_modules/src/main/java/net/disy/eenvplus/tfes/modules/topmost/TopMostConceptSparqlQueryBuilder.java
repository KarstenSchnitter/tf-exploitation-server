//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.topmost;

import static com.hp.hpl.jena.graph.Triple.create;
import static net.disy.eenvplus.tfes.modules.sparql.element.SparqlElementFactory.createSchemeTriple;
import static net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionBuilder.use;
import static net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionFactory.createMultipleOptionsExpression;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.CONCEPT;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.IN_SCHEME;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.LABEL;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.PREF_LABEL;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.TOP_MOST_CONCEPT;
import net.disy.eenvplus.tfes.modules.sparql.element.ElementGroupBuilder;
import net.disy.eenvplus.tfes.modules.sparql.expression.SparqlLanguageExpression;
import net.disy.eenvplus.tfes.modules.sparql.expression.SparqlUriExpression;
import net.disy.eenvplus.tfes.modules.sparql.query.AbstractQueryBuilder;
import net.disy.eenvplus.tfes.modules.sparql.query.SparqlQueryBuilder;

import com.hp.hpl.jena.graph.Node;
import com.hp.hpl.jena.graph.NodeFactory;
import com.hp.hpl.jena.sparql.expr.NodeValue;
import com.hp.hpl.jena.sparql.syntax.Element;
import com.hp.hpl.jena.sparql.syntax.ElementFilter;

// NOT_PUBLISHED
public class TopMostConceptSparqlQueryBuilder
    extends
    AbstractQueryBuilder<TopMostConceptSparqlQueryBuilder> {

  private final Node schemeLabel;
  private final Node topMostConceptLabel;

  @Override
  protected TopMostConceptSparqlQueryBuilder getThis() {
    return this;
  }

  private TopMostConceptSparqlQueryBuilder(String schemeLabel, String topMostConceptLabel) {
    this.schemeLabel = NodeFactory.createVariable(schemeLabel);
    this.topMostConceptLabel = NodeFactory.createVariable(topMostConceptLabel);
  }

  public static TopMostConceptSparqlQueryBuilder createQuery(
      String schemeLabel,
      String topMostConceptLabel) {
    return new TopMostConceptSparqlQueryBuilder(schemeLabel, topMostConceptLabel);
  }

  @Override
  protected SparqlQueryBuilder adapt(SparqlQueryBuilder builder) {
    return builder
        .addResultVariable(CONCEPT.getName())
        .addResultVariable(schemeLabel)
        .addResultVariable(TOP_MOST_CONCEPT.getName())
        .addResultVariable(topMostConceptLabel);
  }

  @Override
  protected Element createBody() {
    return ElementGroupBuilder
        .createGroup()
        .add(create(CONCEPT.createVar(), LABEL.createUriNode(), schemeLabel))
        .add(
            create(
                CONCEPT.createVar(),
                TOP_MOST_CONCEPT.createUriNode(),
                TOP_MOST_CONCEPT.createVar()))
        .add(create(TOP_MOST_CONCEPT.createVar(), PREF_LABEL.createUriNode(), topMostConceptLabel))
        .add(createSchemeTriple(TOP_MOST_CONCEPT, IN_SCHEME))
        .add(createFilter())
        .build();
  }

  private ElementFilter createFilter() {
    return use(NodeValue.TRUE)
        //
        .and(
            createMultipleOptionsExpression(
                new SparqlLanguageExpression(topMostConceptLabel),
                getLanguages()),
            !getLanguages().isEmpty())
        .and(
            createMultipleOptionsExpression(new SparqlUriExpression(IN_SCHEME), getSchemas()),
            !getSchemas().isEmpty())
        .toElementFilter();
  }
}
