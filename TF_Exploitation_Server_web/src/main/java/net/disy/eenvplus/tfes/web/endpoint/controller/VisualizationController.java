//Copyright (c) 2015 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.endpoint.controller;

import static java.util.Arrays.asList;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.CONCEPT;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.DEPTH;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.LANGUAGES;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.RELATIONS;
import static net.disy.eenvplus.tfes.web.endpoint.query.ServiceQueryBuilder.createConceptQuery;
import static org.apache.commons.lang3.StringUtils.split;
import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.exceptions.UnknownRelationException;
import net.disy.eenvplus.tfes.core.api.query.QueryParameterKeys;
import net.disy.eenvplus.tfes.core.api.response.IVisualizationNode;
import net.disy.eenvplus.tfes.core.api.service.IServiceManager;
import net.disy.eenvplus.tfes.web.api.exceptions.ErrorResponseCodes;
import net.disy.eenvplus.tfes.web.api.rest.RestApiErrorMessage;
import net.disy.eenvplus.tfes.web.api.visualization.VisualizationResponse;
import net.disy.eenvplus.tfes.web.endpoint.core.ErrorResponseFactory;
import net.disy.eenvplus.tfes.web.endpoint.query.ServiceQuery;
import net.disy.eenvplus.tfes.web.validation.api.IVisualizationQueryValidator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

// NOT_PUBLISHED

@RestController
@RequestMapping("/visualization")
public class VisualizationController {

  @Autowired
  private IServiceManager manager;

  @Autowired
  private IVisualizationQueryValidator validator;

  @RequestMapping(method = RequestMethod.GET, produces = "application/vnd.tfes.visualization.flare+json; version=1; charset=UTF-8")
  public ResponseEntity<VisualizationResponse> getVisualization(
      @RequestParam(value = CONCEPT) String concept,
      @RequestParam(value = LANGUAGES, defaultValue = "") String languages,
      @RequestParam(value = RELATIONS, defaultValue = "") String relations,
      @RequestParam(value = DEPTH, defaultValue = "3") Integer depth) throws ServiceException {

    ServiceQuery query = createConceptQuery(concept)
        .withLanguages(languages)
        .withExtraParameters(QueryParameterKeys.QUERY_DEPTH.getKey(), depth)
        .withExtraParameters(QueryParameterKeys.RELATIONS.getKey(), asList(split(relations, ',')))
        .build();
    validator.validate(query);

    IVisualizationNode root = manager.getRelativeNeighbourhood(query);
    VisualizationResponse response = new VisualizationResponse(root);

    return new ResponseEntity<>(response, HttpStatus.OK);
  }

  @ExceptionHandler
  public ResponseEntity<RestApiErrorMessage> handleIllegalQueryType(
      UnknownRelationException exception) {
    return ErrorResponseFactory.createResponse(
        ErrorResponseCodes.UNKNOWN_VALUE,
        "relation: " + exception.getRelation()); //$NON-NLS-1$
  }

}
