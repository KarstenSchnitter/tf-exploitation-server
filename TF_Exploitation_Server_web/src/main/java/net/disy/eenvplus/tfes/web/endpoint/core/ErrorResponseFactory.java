//Copyright (c) 2015 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.endpoint.core;

import net.disy.eenvplus.tfes.web.api.exceptions.ErrorResponseCodes;
import net.disy.eenvplus.tfes.web.api.exceptions.IErrorResponseCode;
import net.disy.eenvplus.tfes.web.api.rest.RestApiErrorMessage;

import org.apache.commons.lang3.StringUtils;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

// NOT_PUBLISHED
public final class ErrorResponseFactory {

  private ErrorResponseFactory() {
  }

  public static ResponseEntity<RestApiErrorMessage> createResponse(
      ErrorResponseCodes responseCode,
      Object... arguments) {
    RestApiErrorMessage message = ErrorResponseFactory.createErrorMessage(responseCode, arguments);
    HttpStatus httpStatus = responseCode.getHttpStatus();
    return new ResponseEntity<RestApiErrorMessage>(message, httpStatus);
  }

  public static RestApiErrorMessage createErrorMessage(
      IErrorResponseCode responseCode,
      Object... arguments) {
    RestApiErrorMessage message = new RestApiErrorMessage();
    message.setCode(responseCode.getCode());
    message.setText(responseCode.createText(arguments));
    return message;
  }

  static RestApiErrorMessage createErrorMessage(IllegalQueryArgumentException exception) {
    IErrorResponseCode errorResponseCode = exception.getResponseCode();
    Object[] arguments = exception.getArguments();
    return createErrorMessage(errorResponseCode, arguments);
  }

  static void appendExceptionMessage(RestApiErrorMessage message, Exception exception) {
    if (StringUtils.isNotBlank(exception.getLocalizedMessage())) {
      StringBuilder builder = new StringBuilder(message.getText());
      builder.append("\n"); //$NON-NLS-1$
      builder.append(exception.getLocalizedMessage());
      message.setText(builder.toString());
    }
  }

}
